/* Generated By:JavaCC: Do not edit this line. GWikiScannerTokenManager.java */
/*******************************************************************************
 * Copyright (c) 2005,2007 Cognium Systems SA and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License, Version 2.0
 * which accompanies this distribution, and is available at
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Contributors:
 *     Cognium Systems SA - initial API and implementation
 *******************************************************************************/
package org.wikimodel.wem.gwiki.javacc;
import org.wikimodel.wem.WikiStyle;
import org.wikimodel.wem.impl.IWikiScannerContext;

public class GWikiScannerTokenManager implements GWikiScannerConstants
{
  int verbatimBlockDepth = 0;
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x800000000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_1(0x800000000000000L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_1(active0, 0x800000000000000L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private final int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStopAtPos(2, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 106;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     jjCheckNAdd(78);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddStates(0, 4);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAdd(77);
                  }
                  if (curChar == 13)
                     jjAddStates(5, 9);
                  else if (curChar == 61)
                     jjCheckNAddStates(10, 12);
                  else if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 42)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  if (curChar == 61)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  break;
               case 1:
                  if (kind > 60)
                     kind = 60;
                  break;
               case 4:
               case 5:
                  jjCheckNAddStates(13, 15);
                  break;
               case 7:
               case 81:
                  if (curChar == 61 && kind > 66)
                     kind = 66;
                  break;
               case 12:
               case 13:
                  jjCheckNAddStates(16, 18);
                  break;
               case 15:
                  if (curChar == 42 && kind > 69)
                     kind = 69;
                  break;
               case 18:
                  if (curChar == 44 && kind > 69)
                     kind = 69;
                  break;
               case 19:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 22:
                  if (curChar == 58)
                     jjAddStates(19, 23);
                  break;
               case 24:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(24, 22);
                  break;
               case 25:
                  if (curChar != 47)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(24, 31);
                  break;
               case 26:
                  if ((0x2fff6fd200000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 27:
                  if (curChar == 37)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 31:
                  if (curChar == 37)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(35, 40);
                  break;
               case 34:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(35, 40);
                  break;
               case 35:
                  if (curChar == 58)
                     jjCheckNAdd(36);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(41, 44);
                  break;
               case 37:
                  if (curChar != 47)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(45, 49);
                  break;
               case 38:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(45, 49);
                  break;
               case 39:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(45, 49);
                  break;
               case 42:
                  if (curChar != 63)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(50, 52);
                  break;
               case 43:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(50, 52);
                  break;
               case 44:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(50, 52);
                  break;
               case 47:
                  if (curChar != 35)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 48:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 52:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(28, 32);
                  break;
               case 53:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 54:
                  if (curChar != 47)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(53, 56);
                  break;
               case 55:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(57, 61);
                  break;
               case 56:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(57, 61);
                  break;
               case 59:
                  if (curChar != 47)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(62, 66);
                  break;
               case 60:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(62, 66);
                  break;
               case 61:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(62, 66);
                  break;
               case 64:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 67:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(67, 71);
                  break;
               case 70:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(67, 71);
                  break;
               case 71:
                  if (curChar != 47)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(72, 76);
                  break;
               case 72:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(72, 76);
                  break;
               case 73:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(72, 76);
                  break;
               case 76:
                  if ((0x2bff6fd200000000L & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 77:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(78);
                  break;
               case 79:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 80:
                  if (curChar == 61)
                     jjCheckNAddStates(10, 12);
                  break;
               case 82:
               case 84:
                  if (curChar == 61)
                     jjCheckNAdd(81);
                  break;
               case 83:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 85:
                  if (curChar == 13)
                     jjAddStates(5, 9);
                  break;
               case 86:
                  if (curChar == 10)
                     jjCheckNAdd(87);
                  break;
               case 87:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(87, 88);
                  break;
               case 88:
                  if ((0x40800000000L & l) != 0L)
                     jjCheckNAdd(89);
                  break;
               case 89:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(89);
                  break;
               case 90:
                  if (curChar == 10)
                     jjCheckNAdd(92);
                  break;
               case 93:
                  if (curChar == 10)
                     jjCheckNAdd(94);
                  break;
               case 94:
                  if (curChar == 35)
                     jjCheckNAdd(95);
                  break;
               case 95:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(95, 96);
                  break;
               case 96:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAdd(96);
                  break;
               case 97:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 98:
               case 100:
                  if (curChar == 61 && kind > 64)
                     kind = 64;
                  break;
               case 99:
                  if (curChar == 61)
                     jjCheckNAddStates(77, 79);
                  break;
               case 101:
               case 103:
                  if (curChar == 61)
                     jjCheckNAdd(100);
                  break;
               case 102:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 104:
                  if (curChar == 10 && kind > 71)
                     kind = 71;
                  break;
               case 105:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(0, 4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                     jjCheckNAdd(78);
                  }
                  else if ((0x78000001f8000001L & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  else if ((0xc0000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                  }
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 91)
                     jjCheckNAddStates(13, 15);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 60)
                     kind = 60;
                  break;
               case 2:
                  if (curChar == 91)
                     jjCheckNAddStates(13, 15);
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  jjCheckNAddStates(13, 15);
                  break;
               case 5:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 6:
                  if (curChar == 93 && kind > 65)
                     kind = 65;
                  break;
               case 8:
                  if (curChar == 124 && kind > 67)
                     kind = 67;
                  break;
               case 9:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  break;
               case 11:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  jjCheckNAddStates(16, 18);
                  break;
               case 13:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 14:
                  if (curChar == 96 && kind > 68)
                     kind = 68;
                  break;
               case 15:
                  if ((0xc0000000L & l) != 0L && kind > 69)
                     kind = 69;
                  break;
               case 16:
                  if (curChar == 126 && kind > 69)
                     kind = 69;
                  break;
               case 17:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 20:
               case 21:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 23:
               case 24:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(24, 22);
                  break;
               case 26:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 30:
                  if (curChar != 64)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(35, 40);
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(35, 40);
                  break;
               case 34:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(35, 40);
                  break;
               case 38:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(45, 49);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(45, 49);
                  break;
               case 43:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(50, 52);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(50, 52);
                  break;
               case 48:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 55:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(57, 61);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(57, 61);
                  break;
               case 60:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(62, 66);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(62, 66);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(67, 71);
                  break;
               case 70:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(67, 71);
                  break;
               case 72:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(72, 76);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(72, 76);
                  break;
               case 76:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 78:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(78);
                  break;
               case 79:
                  if ((0x78000001f8000001L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 91:
                  if (curChar == 124 && kind > 62)
                     kind = 62;
                  break;
               case 92:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 95:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjAddStates(80, 81);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 78:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAdd(78);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 60)
                     kind = 60;
                  break;
               case 4:
               case 5:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(13, 15);
                  break;
               case 12:
               case 13:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               case 95:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjAddStates(80, 81);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 106 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 58;
            jjmatchedPos = 0;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 58;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_2(0x80000000000L);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_2(active0, 0x80000000000L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private final int jjMoveStringLiteralDfa2_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(2, 43);
         break;
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 106;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(77);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAddStates(82, 84);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAddStates(85, 89);
                  }
                  if (curChar == 61)
                     jjCheckNAddStates(90, 95);
                  else if (curChar == 13)
                     jjAddStates(96, 100);
                  else if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 42)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 35)
                     jjCheckNAdd(3);
                  if (curChar == 61)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  break;
               case 1:
                  if (kind > 44)
                     kind = 44;
                  break;
               case 2:
                  if (curChar == 35)
                     jjCheckNAdd(3);
                  break;
               case 3:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(4);
                  break;
               case 7:
               case 8:
                  jjCheckNAddStates(101, 103);
                  break;
               case 12:
               case 13:
                  jjCheckNAddStates(16, 18);
                  break;
               case 15:
                  if (curChar == 42 && kind > 53)
                     kind = 53;
                  break;
               case 18:
                  if (curChar == 44 && kind > 53)
                     kind = 53;
                  break;
               case 19:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 22:
                  if (curChar == 58)
                     jjAddStates(19, 23);
                  break;
               case 24:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(24, 22);
                  break;
               case 25:
                  if (curChar != 47)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(24, 31);
                  break;
               case 26:
                  if ((0x2fff6fd200000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 27:
                  if (curChar == 37)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 31:
                  if (curChar == 37)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(35, 40);
                  break;
               case 34:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(35, 40);
                  break;
               case 35:
                  if (curChar == 58)
                     jjCheckNAdd(36);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(41, 44);
                  break;
               case 37:
                  if (curChar != 47)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(45, 49);
                  break;
               case 38:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(45, 49);
                  break;
               case 39:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(45, 49);
                  break;
               case 42:
                  if (curChar != 63)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(50, 52);
                  break;
               case 43:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(50, 52);
                  break;
               case 44:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(50, 52);
                  break;
               case 47:
                  if (curChar != 35)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 48:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 52:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(28, 32);
                  break;
               case 53:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 54:
                  if (curChar != 47)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(53, 56);
                  break;
               case 55:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(57, 61);
                  break;
               case 56:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(57, 61);
                  break;
               case 59:
                  if (curChar != 47)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(62, 66);
                  break;
               case 60:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(62, 66);
                  break;
               case 61:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(62, 66);
                  break;
               case 64:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 67:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(67, 71);
                  break;
               case 70:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(67, 71);
                  break;
               case 71:
                  if (curChar != 47)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(72, 76);
                  break;
               case 72:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(72, 76);
                  break;
               case 73:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(72, 76);
                  break;
               case 76:
                  if ((0x2bff6fd200000000L & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 77:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 79:
                  if (curChar == 13)
                     jjAddStates(96, 100);
                  break;
               case 80:
                  if (curChar == 10)
                     jjCheckNAdd(81);
                  break;
               case 81:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 82:
                  if ((0x40800000000L & l) != 0L)
                     jjCheckNAdd(83);
                  break;
               case 83:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjCheckNAdd(83);
                  break;
               case 84:
                  if (curChar == 10)
                     jjCheckNAdd(86);
                  break;
               case 87:
                  if (curChar == 10)
                     jjCheckNAdd(2);
                  break;
               case 88:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(89, 90);
                  break;
               case 89:
               case 91:
                  if (curChar == 61 && kind > 48)
                     kind = 48;
                  break;
               case 90:
                  if (curChar == 61)
                     jjCheckNAddStates(104, 106);
                  break;
               case 92:
               case 94:
                  if (curChar == 61)
                     jjCheckNAdd(91);
                  break;
               case 93:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 95:
                  if (curChar == 10 && kind > 55)
                     kind = 55;
                  break;
               case 96:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(85, 89);
                  break;
               case 97:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(82, 84);
                  break;
               case 98:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(98);
                  break;
               case 101:
                  if (curChar == 61)
                     jjCheckNAddStates(90, 95);
                  break;
               case 102:
                  if (curChar == 61 && kind > 50)
                     kind = 50;
                  break;
               case 103:
               case 105:
                  if (curChar == 61)
                     jjCheckNAdd(102);
                  break;
               case 104:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(77);
                  }
                  else if ((0x78000001f8000001L & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  else if ((0xc0000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 124)
                     jjCheckNAddTwoStates(85, 100);
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  else if (curChar == 91)
                     jjCheckNAddStates(101, 103);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 44)
                     kind = 44;
                  break;
               case 3:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjAddStates(107, 108);
                  break;
               case 5:
                  if (curChar == 91)
                     jjCheckNAddStates(101, 103);
                  break;
               case 6:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  jjCheckNAddStates(101, 103);
                  break;
               case 8:
                  if ((0xffffffffdfffffffL & l) != 0L)
                     jjCheckNAddStates(101, 103);
                  break;
               case 9:
                  if (curChar == 93 && kind > 49)
                     kind = 49;
                  break;
               case 10:
                  if (curChar == 96)
                     jjCheckNAddStates(16, 18);
                  break;
               case 11:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  jjCheckNAddStates(16, 18);
                  break;
               case 13:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 14:
                  if (curChar == 96 && kind > 52)
                     kind = 52;
                  break;
               case 15:
                  if ((0xc0000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 16:
                  if (curChar == 126 && kind > 53)
                     kind = 53;
                  break;
               case 17:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 20:
               case 21:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 23:
               case 24:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(24, 22);
                  break;
               case 26:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 30:
                  if (curChar != 64)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(35, 40);
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(35, 40);
                  break;
               case 34:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(35, 40);
                  break;
               case 38:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(45, 49);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(45, 49);
                  break;
               case 43:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(50, 52);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(50, 52);
                  break;
               case 48:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 50:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 55:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(57, 61);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(57, 61);
                  break;
               case 60:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(62, 66);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(62, 66);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(67, 71);
                  break;
               case 70:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(67, 71);
                  break;
               case 72:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(72, 76);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(72, 76);
                  break;
               case 76:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(67, 70);
                  break;
               case 77:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if ((0x78000001f8000001L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 85:
                  if (curChar == 124 && kind > 46)
                     kind = 46;
                  break;
               case 86:
                  if (curChar == 124)
                     jjCheckNAdd(85);
                  break;
               case 99:
                  if (curChar == 124)
                     jjCheckNAddTwoStates(85, 100);
                  break;
               case 100:
                  if (curChar == 124 && kind > 51)
                     kind = 51;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 77:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(77);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 44)
                     kind = 44;
                  break;
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjAddStates(107, 108);
                  break;
               case 7:
               case 8:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(101, 103);
                  break;
               case 12:
               case 13:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 106 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4L) != 0L)
            return 5;
         if ((active0 & 0x2L) != 0L)
            return 9;
         return -1;
      case 1:
         if ((active0 & 0x4L) != 0L)
            return 4;
         if ((active0 & 0x2L) != 0L)
            return 8;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa1_0(0x2L);
      case 125:
         return jjMoveStringLiteralDfa1_0(0x4L);
      default :
         return jjMoveNfa_0(11, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 123:
         return jjMoveStringLiteralDfa2_0(active0, 0x2L);
      case 125:
         return jjMoveStringLiteralDfa2_0(active0, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 123:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(2, 1);
         break;
      case 125:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(2, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 11;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
               case 2:
               case 1:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 9:
               case 8:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 5:
               case 4:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
                  if ((0xd7ffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(109, 114);
                  }
                  else if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 125)
                     jjstateSet[jjnewStateCnt++] = 5;
                  if (curChar == 123)
                     jjCheckNAdd(8);
                  else if (curChar == 125)
                     jjCheckNAdd(4);
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 9:
                  if ((0xf7ffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(109, 114);
                  }
                  else if (curChar == 123)
                     jjCheckNAdd(8);
                  break;
               case 5:
                  if ((0xdfffffffffffffffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAddStates(109, 114);
                  }
                  else if (curChar == 125)
                     jjCheckNAdd(4);
                  break;
               case 0:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 2:
                  if ((0xd7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 3:
                  if (curChar == 125)
                     jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 6:
                  if (curChar == 125)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 123)
                     jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0xf7ffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 10:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 11:
               case 2:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 9:
               case 8:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               case 5:
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAddStates(109, 114);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 11 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   87, 92, 94, 98, 99, 86, 90, 93, 97, 104, 83, 84, 81, 3, 5, 6, 
   11, 13, 14, 23, 53, 54, 64, 76, 26, 30, 34, 35, 37, 42, 47, 52, 
   27, 26, 30, 31, 34, 35, 37, 42, 47, 36, 37, 42, 47, 37, 38, 39, 
   42, 47, 43, 44, 47, 55, 56, 42, 47, 55, 56, 59, 42, 47, 59, 60, 
   61, 42, 47, 67, 70, 71, 42, 47, 71, 72, 73, 42, 47, 102, 103, 100, 
   95, 96, 81, 82, 98, 81, 86, 2, 89, 90, 93, 94, 91, 104, 105, 102, 
   80, 84, 87, 88, 95, 6, 8, 9, 93, 94, 91, 3, 4, 0, 2, 3, 
   6, 7, 10, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", "\173\173\173", "\175\175\175", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\173\173\173", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\173\173\173", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "VERBATIM_CONTEXT", 
   "DEFAULT", 
   "INITIAL_CONTEXT", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 1, 1, 1, 1, 1, 
   1, 1, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[106];
private final int[] jjstateSet = new int[212];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public GWikiScannerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public GWikiScannerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 106; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         t.image = "";
      else
         t.image = image.toString();
      t.beginLine = t.endLine = input_stream.getBeginLine();
      t.beginColumn = t.endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      t.image = (im == null) ? input_stream.GetImage() : im;
      t.beginLine = input_stream.getBeginLine();
      t.beginColumn = input_stream.getBeginColumn();
      t.endLine = input_stream.getEndLine();
      t.endColumn = input_stream.getEndColumn();
   }
   return t;
}

int curLexState = 1;
int defaultLexState = 1;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 55;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[1]);
                                          verbatimBlockDepth++;
         break;
      case 2 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[2]);
            verbatimBlockDepth--;
            if (verbatimBlockDepth == 0)  {
                SwitchTo(INITIAL_CONTEXT);
            } else {
                SwitchTo(VERBATIM_CONTEXT);
            }
         break;
      case 43 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[43]);
                                  verbatimBlockDepth++;
         break;
      case 59 :
        if (image == null)
            image = new StringBuffer();
            image.append(jjstrLiteralImages[59]);
                                  verbatimBlockDepth++;
         break;
      default : 
         break;
   }
}
}
