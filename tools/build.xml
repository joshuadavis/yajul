<project name="yajul" default="all">
	<!-- 
        Get all the relevant properties from the user's home directory
        This file should be secure (chmod 600) because it will contain some sensitive information.
	-->
	<property file="${user.home}/yajul-build.properties"/>
	<!-- Property defaults -->
	<property name="yajul.dir" value="${basedir}/.."/>
	<property name="forrest.name" value="apache-forrest-0.5.1-bin"/>
	<property name="forrest.tarball" value="${forrest.name}.tar.gz"/>
	<property name="unpack.dir" value="${basedir}/unpack"/>
	<property name="forrest.home" value="${unpack.dir}/${forrest.name}"/>
	<property name="site.dir" value="${yajul.dir}/yajul-site"/>
	
	
	<target name="-init">
		<tstamp/>
		<fail unless="cvs.root">The property 'cvs.root' is not specified, please define it in ${user.home}/yajul-build.properties.</fail>
		<fail unless="cvs.rsh">The property 'cvs.rsh' is not specified, please define it in ${user.home}/yajul-build.properties.</fail>
		<property name="build.timestamp" value="${DSTAMP}_${TSTAMP}"/>
		<property name="build.tag" value="BUILD_${build.timestamp}"/>
	</target>
	
	<target name="unpack.check">
		<uptodate property="forrest.uptodate" targetfile="${forrest.home}/forrest.antproxy.xml" >
			<srcfiles dir= "${basedir}" includes="${forrest.name}.tar.gz"/>
  		</uptodate>	
	</target>
	
	<target name="unpack.forrest" depends="unpack.check" unless="forrest.uptodate">
		<mkdir dir="${unpack.dir}"/>
		<untar compression="gzip" src="${forrest.name}.tar.gz" dest="${unpack.dir}"/>
	</target>
	
	<target name="unpack" depends="unpack.forrest" description="Unpack tool archive files.">
	</target>
	
	<target name="boot" depends="unpack" description="Update the /tools directory from CVS">
		<cvs command="checkout" compression="${cvs.compression}" cvsRoot="${cvs.root}" cvsRsh="${cvs.rsh}" dest="${yajul.dir}" package="tools"/>
	</target>
	<target name="checkout" description="Update all of the source code from CVS">
		<cvs command="checkout" compression="${cvs.compression}" cvsRoot="${cvs.root}" cvsRsh="${cvs.rsh}" dest="${yajul.dir}" package="yajul-core"/>
		<cvs command="checkout" compression="${cvs.compression}" cvsRoot="${cvs.root}" cvsRsh="${cvs.rsh}" dest="${yajul.dir}" package="yajul-site"/>
	</target>
	<target name="build">
		<ant antfile="${yajul.dir}/yajul-core/build.xml" inheritall="false" target="full"/>
	</target>
	<target name="checkstyle">
		<taskdef resource="checkstyletask.properties" classpath="ant/lib/checkstyle-all-3.4.jar"/>
		<mkdir dir="build/yajul-core/checkstyle"/>
		<checkstyle config="checkstyle_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="build/yajul-core/checkstyle_report.xml"/>
			<fileset dir="../yajul-core/src" includes="**/*.java"/>
		</checkstyle>
		<style in="build/yajul-core/checkstyle_report.xml" out="build/yajul-core/checkstyle/index.html" style="checkstyle-noframes-sorted.xsl"/>
	</target>
	<target name="mail" depends="-init">
		<mail from="${smtp.fromuser}" mailhost="${smtp.host}" 
			user="${smtp.user}" password="${smtp.password}" tolist="${smtp.touser}" subject="Results of nightly build : ${build.timestamp}">
			<message>This is a test</message>
		</mail>
	</target>
	<path id="forrest-classpath">
		<fileset dir="${forrest.home}">
			<include name="ant/lib/*.jar"/>
			<include name="lib/endorsed/*.jar"/>
		</fileset>
		<pathelement location="${java.home}/../lib/tools.jar"/>
	</path>
	<target name="site"  depends="unpack.forrest" description="Build the forrest website.">
		<fail unless="forrest.home">The property 'forrest.home' is not defined.</fail>
		<ant antfile="${forrest.home}/forrest.antproxy.xml" target="site" dir="${site.dir}"/>
	</target>
	<target name="publish" depends="site" description="Publish the build results on the local machine's web server.">
		<fail unless="web.dir">The property 'web.dir' is not specified, please defined it in ${user.home}/yajul-build.properties.</fail>
		<!-- Publish locally -->
		<sync todir="${web.dir}/yajul-core" overwrite="true" failonerror="false">
			<fileset dir="${yajul.dir}/yajul-core/build">
				<include name="docs/**"/>
				<include name="lib/**"/>
				<include name="junit/**"/>
				<include name="jdepend/**"/>
				<include name="clover_html/**"/>
			</fileset>
			<fileset dir="build/yajul-core">
				<include name="checkstyle/**"/>
			</fileset>
		</sync>
	</target>
	<target name="all" depends="checkout,build,site,mail">
    	</target>
</project>
