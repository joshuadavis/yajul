<project name="yajul-core" default="default">

    <!-- Load in property overrides first (such as build.dir) -->

    <!-- Default property values -->
    <property name="main.src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="${build.dir}/dist"/>
    <property name="main.class.dir" value="${build.dir}/classes"/>
    <property name="main.jar.dir" value="${build.dir}/lib"/>
    <property name="javac.debug" value="false"/>
    <property name="javac.optimize" value="true"/>
    <property name="javac.deprecation" value="true"/>
    <property name="javac.verbose" value="false"/>

    <property name="test.src.dir" value="${basedir}/test_src"/>
    <property name="test.class.dir" value="${build.dir}/test_classes"/>
    <property name="test.log.dir" value="${build.dir}/test/log"/>
    <property name="junit.dir" value="${test.log.dir}"/>

    <path id="compile.classpath">
        <pathelement path="${basedir}/lib/xml-apis.jar:${basedir}/lib/xercesImpl.jar:${basedir}/lib/xalan.jar"/>
        <pathelement path="${basedir}/lib/log4j-1.2.7.jar"/>
        <pathelement path="${basedir}/lib/junit.jar"/>
        <pathelement path="${basedir}/lib/jdbc2_0-stdext.jar"/>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <pathelement location="${main.class.dir}"/>
    </path>

    <path id="test.runtime.classpath">
        <path refid="test.classpath"/>
        <pathelement location="${test.class.dir}"/>
        <!-- Required for testing -->
        <pathelement path="${basedir}/lib/hsqldb.jar"/>
        <pathelement path="${basedir}/test_data/resources"/>
    </path>

    <patternset id="test.files">
        <include name="org/yajul/**/*Test*.java" />
    </patternset>

    <patternset id="java.files">
        <include name="org/yajul/**/*.java" />
    </patternset>

<target name="init">
    <tstamp>
        <format property="build.time" pattern="MM/dd/yyyy hh:mm aa"/>
    </tstamp>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${main.class.dir}"/>
    <mkdir dir="${main.jar.dir}"/>
    <mkdir dir="${test.class.dir}"/>
    <mkdir dir="${test.log.dir}"/>
    <mkdir dir="${dist.dir}"/>
</target>

<target name="clean">
    <delete includeEmptyDirs="true">
        <fileset dir="${main.class.dir}"/>
        <fileset dir="${main.jar.dir}"/>
        <fileset dir="${test.class.dir}"/>
        <fileset dir="${test.log.dir}"/>
        <fileset dir="${build.dir}"/>
    </delete>
</target>

<target name="compile" depends="init">
    <echo message="${ant.project.name} Compiling main classes to ${main.class.dir}"/>
    <javac srcdir="${main.src.dir}" destdir="${main.class.dir}"
       classpathref="compile.classpath" debug="${javac.debug}"
       optimize="${javac.optimize}" deprecation="${javac.deprecation}"
       verbose="${javac.verbose}"/>
</target>

<target name="compile.tests" depends="init">
    <echo message="${ant.project.name} Compiling test classes to ${test.class.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.class.dir}"
       classpathref="test.classpath" debug="${javac.debug}"
       optimize="${javac.optimize}" deprecation="${javac.deprecation}"
       verbose="${javac.verbose}"/>
</target>

<target name="test" depends="init">
    <junit fork="yes" printsummary="yes" haltonfailure="yes"  dir="${basedir}">
      <classpath>
        <path refid="test.runtime.classpath"/>
      </classpath>
      <formatter type="plain"/>
      <batchtest todir="${test.log.dir}">
        <fileset dir="${test.src.dir}">
          <patternset refid="test.files"/>
        </fileset>
      </batchtest>
    </junit>
</target>

<target name="test.xmlreport" depends="init" description="Performs unit tests, generating an XML report.">
        <junit fork="yes"
            printsummary="yes" haltonfailure="yes" showoutput="no"  dir="${basedir}">
            <classpath>
              <path refid="test.runtime.classpath"/>
            </classpath>

          <formatter type="xml"/>
          <batchtest todir="${junit.dir}">
            <fileset dir="${test.src.dir}">
              <patternset refid="test.files"/>
            </fileset>
          </batchtest>
        </junit>
</target>

<target name="test.textreport" depends="init" description="Performs unit tests, generating a text report.">
        <junit fork="yes"
            printsummary="yes" haltonfailure="yes" showoutput="no"  dir="${basedir}">
            <classpath>
              <path refid="test.runtime.classpath"/>
            </classpath>

          <formatter type="plain"/>
          <batchtest todir="${junit.dir}">
            <fileset dir="${test.src.dir}">
              <patternset refid="test.files"/>
            </fileset>
          </batchtest>
        </junit>
</target>

<target name="jar">
  <jar jarfile="${main.jar.dir}/${ant.project.name}.jar"
       basedir="${main.class.dir}"/>
</target>

<target name="dist.source" depends="init">
    <!-- Zip up all of the source files -->
    <zip zipfile="${dist.dir}/${ant.project.name}-source.zip">
        <fileset dir=".">
            <include name="src/**"/>
            <include name="test_src/**"/>
            <include name="test_data/**"/>
            <include name="build.xml"/>
        </fileset>
    </zip>
</target>

<target name="default" depends="compile,jar"/>

<target name="full" depends="clean,compile,jar,compile.tests,test">
</target>

</project>










