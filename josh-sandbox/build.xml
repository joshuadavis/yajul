<project name="core" default="default">

<!-- Global properties - Mostly absolute paths and other settings -->

<property file="build.properties" />
<property name="project.name" value="core"/>
<property name="src" value="./src"/>
<property name="test.src" value="./test_src"/>
<property name="classes" value="./classes"/>
<property name="test.classes" value="./test_classes"/>
<property name="lib" value="./lib"/>			<!-- Jars used by the project code -->
<property name="bin" value="./bin"/>
<property name="dist.home" value="./dist"/>
<property name="dist.temp" value="${dist.home}/temp"/>
<property name="www" value="./www"/>
<property name="reports.dir" value="./report"/>         <!-- Build report directory -->
<property name="package.prefix" value="org.yajul"/>	<!-- The base package for the project. -->
<property name="tools.lib" value="./tools/lib"/>	<!-- Jars for ANT -->
<property name="javadoc.dir" value="./docs/api"/>       <!-- Javadoc output -->

<!-- The classpath for compilation -->
<path id="compile.classpath">
  <pathelement location="${classes}" />
  <fileset dir="${lib}">
    <include name="**/*.jar" />
  </fileset>
</path>

<path id="runtime.classpath">
  <pathelement location="${classes}" />
  <fileset dir="${lib}">
    <include name="**/*.jar" />
  </fileset>    
</path>

<path id="test.classpath">
  <path refid="runtime.classpath"/>
  <pathelement location="${test.classes}"/>
</path>

<path id="quilt.classpath">
  <pathelement location="${tools.lib}/colt.jar" />
  <pathelement location="${tools.lib}/quilt.jar" />
  <pathelement location="${tools.lib}/bcel.jar" />
  <pathelement location="${tools.lib}/graph.jar" />
  <pathelement location="${tools.lib}/commons-collections.jar" />
  <fileset dir="${lib}">
    <include name="**/*.jar" />
  </fileset>      
</path>

<taskdef name="quilt"
         classname="junit.quilt.ant.AntQuiltRunner"
         classpathref="quilt.classpath" />

<target name="init" description="Initializes the build directories, etc.">
<!--    <taskdef name="torque-sql"
      classname="org.apache.turbine.torque.TorqueSQLTask">
      <classpath refid="classpath"/>
    </taskdef> -->
    <!-- Create directories -->
    <mkdir dir="${dist.home}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist.temp}"/>
    <mkdir dir="${reports.dir}"/>
    <tstamp/>
    <echo>Build project initialized: ${DSTAMP} ${TSTAMP}</echo>
</target>

<target name="compile" depends="init" description="Compiles all files">
  <mkdir dir="${classes}"/>
  <javac srcdir="${src}" destdir="${classes}">
    <classpath>
    	<path refid="compile.classpath"/>
    </classpath>
  </javac>
  <!-- Copy the resources as well. -->
  <copy todir="${classes}" >
    <fileset dir="${src}" >
      <include name="**/*.properties"/>
      <include name="**/*.xml"/>
    </fileset>
  </copy>
</target>

<target name="compile.tests" depends="compile" description="Compiles the test suites.">
  <mkdir dir="${test.classes}"/>
  <javac srcdir="${test.src}" destdir="${test.classes}">
    <classpath>
    	<path refid="compile.classpath"/>
    	<path location="${classes}"/>
    </classpath>
  </javac>
</target>

<target name="javadoc" depends="init" description="Generate javadoc">
  <mkdir dir="${javadoc.dir}"/>
  <javadoc packagenames="org.yajul.*"
           sourcepath="src"
           excludepackagenames="**.test.*"
           defaultexcludes="yes"
           destdir="${javadoc.dir}"
           author="true"
           version="true"
           use="true"
           windowtitle="WebCM API">
    <!-- <doctitle><![CDATA[<h1>WebCM API</h1>]]></doctitle> -->
    <!-- <bottom><![CDATA[<i>Copyright &#169; 2001 PGMJSD, Inc. All Rights Reserved.</i>]]></bottom> -->
    <!--
    <group title="Group 1 Packages" packages="com.dummy.test.a*"/>
    <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>
    -->
    <link offline="${javadoc.offline}" href="http://java.sun.com/products/jdk/1.4/docs/api/" packagelistLoc="${javadoc.package-lists}/jdk1.3-package-list"/>
    <link offline="${javadoc.offline}" href="http://java.sun.com/xml/jaxp/dist/1.1/docs/api/" packagelistLoc="${javadoc.package-lists}/jaxp1.1-package-list"/>
  </javadoc>
</target>

<target name="clean" description="Removes generated files.">
  <delete dir="${classes}"/>
  <delete dir="${test.classes}"/>
</target>

<target name="test" depends="compile.tests" description="Runs unit tests.">
    <junit printsummary="yes" fork="yes" haltonfailure="yes">
      <classpath refid="test.classpath"/>
      <formatter type="plain" />
	  <batchtest todir="${reports.dir}">
	    <fileset dir="${test.src}">
	      <include name="**/PackageTests.java"/>
	      <exclude name="**/AllTests.java"/>
	    </fileset>
	  </batchtest>      
    </junit>
</target>

<target name="default" depends="test">
</target>

<target name="dist.src" depends="init" description="Create source distribution package.">
  <zip zipfile="${dist.home}/src-${DSTAMP}.zip">
    <fileset dir=".">
        <include name="bin/**"/>
        <include name="lib/**"/>
        <include name="src/**"/>
        <include name="doc/**"/>
        <include name="xml/**"/>
        <include name="*"/>
    </fileset>
  </zip>
</target>


<target name="quilt" description="Runs the 'quilt' coverage analyzer.">
	<quilt reportdir="${reports.dir}"
	       reporter="junit.quilt.reports.XMLSummary"
	       packages="${package.prefix}"
	       register="junit.quilt.cover.state.StateMachineRegistry"
	       >
	  <!--     register="junit.quilt.cover.ball94.B94Registry" -->
	  <classpath>
	  	<path refid="test.classpath"/>
		  <fileset dir="${lib}">
		    <include name="**/*.jar" />
		  </fileset>    	  	
	  </classpath>
	
	  <fileset dir="${test.classes}">
	    <include name="**/*Test.class"/>
	    <include name="**/AllTests.class" />
	  </fileset>
	</quilt>

</target>

</project>